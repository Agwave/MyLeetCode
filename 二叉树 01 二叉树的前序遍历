给定一个二叉树，返回它的 前序 遍历。

 示例:

输入: [1,null,2,3]  
   1
    \
     2
    /
   3 

输出: [1,2,3]
进阶: 递归算法很简单，你可以通过迭代算法完成吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/binary-tree-preorder-traversal
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。









###################自答####################
# Python3：95%(递归）
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def preorderTraversal(self, root: TreeNode) -> List[int]:
        ret = []
        
        if root is None:
            return ret
        
        ret += [root.val]
        ret += self.preorderTraversal(root.left)
        ret += self.preorderTraversal(root.right)
        
        return ret
        
        


# C++:100%
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ret;
        stack<TreeNode*> stk;
        
        if (root == NULL) return ret;
        
        stk.push(root);
        while (!stk.empty()) {
            TreeNode* node = stk.top();
            stk.pop();
            ret.push_back(node->val);
            if (node->right != NULL) stk.push(node->right);
            if (node->left != NULL) stk.push(node->left);
        }
        
        return ret;
    }
};






#######################参考解答########################
# python3：








# C++：
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> res;
        if(root==nullptr)
            return res;
        preorderTraversalcore(root,res);
        return res;
        
    }
    void preorderTraversalcore(TreeNode* root,vector<int>& res)
    {
        if(!root)
            return ;
        res.push_back(root->val);
        if(root->left!=nullptr)
            preorderTraversalcore(root->left,res);
        if(root->right!=nullptr)
            preorderTraversalcore(root->right,res);
        return;
    }
};
