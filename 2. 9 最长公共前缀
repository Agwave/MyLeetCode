编写一个函数来查找字符串数组中的最长公共前缀。

如果不存在公共前缀，返回空字符串 ""。

示例 1:

输入: ["flower","flow","flight"]
输出: "fl"
示例 2:

输入: ["dog","racecar","car"]
输出: ""
解释: 输入不存在公共前缀。
说明:

所有输入只包含小写字母 a-z 。


# 我的解答
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        # 找出最短的字符串
        if strs == [] :
            return ""
        min_strs = strs[0]
        index = 0
        for i in range(1, len(strs)) :
            if len(min_strs) > len(strs[i]) :
                min_strs = strs[i]
                index = i
                
        count = 0
        for i in range(len(strs[index])) :
            for j in range(len(strs)) :
                if strs[index][i] != strs[j][i] :
                    return strs[0][:count] if count >= 1 else ""
            count += 1
        return strs[0][:count]



# 用时最短
class Solution:
    def longestCommonPrefix(self, strs: 'List[str]') -> 'str':
        if len(strs) == 0:
            return ''
        if len(strs) == 1:
            return strs[0]

        prefix, chars = '', zip(*strs)
        for i, group in enumerate(chars):
            ch = group[0]
            for j in range(1, len(group)):
                if group[j] != ch:
                    return prefix
            prefix += strs[0][i]
        return prefix
