给定只含 "I"（增大）或 "D"（减小）的字符串 S ，令 N = S.length。

返回 [0, 1, ..., N] 的任意排列 A 使得对于所有 i = 0, ..., N-1，都有：

如果 S[i] == "I"，那么 A[i] < A[i+1]
如果 S[i] == "D"，那么 A[i] > A[i+1]
 

示例 1：

输出："IDID"
输出：[0,4,1,3,2]
示例 2：

输出："III"
输出：[0,1,2,3]
示例 3：

输出："DDI"
输出：[3,2,0,1]
 

提示：

1 <= S.length <= 1000
S 只包含字符 "I" 或 "D"。



#############参考解答##########
# C++：83%
class Solution {
public:
    vector<int> diStringMatch(string S) {
        vector<int> ret;
        int N = S.size();
        vector<int> list;
        int left = 0;
        int right = N;
        
        for (int i = 0; i < N+1; ++i)
            list.push_back(i);
        
        for (int i = 0; i < S.size(); ++i) {
            if (S[i] == 'I') {
                ret.push_back(list[left]);
                left++;
            } else {
                ret.push_back(list[right]);
                right--;
            }
        }
        
        ret.push_back(list[left]);
        
        return ret;
    }
};



###########自答############
# C++：
class Solution {
public:
    vector<int> diStringMatch(string S) 
    {
        vector<int> result(S.length()+1, 0);
        int low = 0;
        int high = S.length();
        
        for(int i=0; i<S.length(); i++)
        {
            if(S[i] == 'I')
            {
                result[i] = low;
                low ++;
            }
            if(S[i] == 'D')
            {
                result[i] = high;
                high --;
            }
        }
        result[S.length()] = low;
        
        return result;
    }
};
