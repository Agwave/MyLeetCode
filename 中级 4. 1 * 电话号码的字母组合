给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。



示例:

输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
说明:
尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。













# 参考解答
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        maps = {
            '2': "abc",
            '3': "def",
            '4': "ghi",
            '5': "jkl",
            '6': "mno",
            '7': "pqrs",
            '8': "tuv",
            '9': "wxyz"
        }
        ret = []
        for n in digits:
            if not ret:
                for s in maps.get(n, ''):
                    ret.append(s)
            else:
                tmp = []
                for r in ret:
                    for s in maps.get(n, ''):
                        tmp.append(r+s)
                ret = tmp
            print(ret)
        return ret
