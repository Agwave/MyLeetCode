给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。

例如，给出 n = 3，生成结果为：

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]










# 参考解答
class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        if n == 0:
            return []
        
        result = []
        self.helpler(n, n, '', result)
        return result
    
    def helpler(self, l, r, item, result):
        if r < l:
            return 
        if r == 0 and l == 0:
            result.append(item)
        if l > 0:
            self.helpler(l - 1, r, item + '(', result)
        if r > 0:
            self.helpler(l, r - 1, item + ')', result)
        print(result)
