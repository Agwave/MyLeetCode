给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。



在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 5
输出:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]








# 自答：
class Solution(object):
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        if numRows == 0:
            return []
        if numRows == 1:
            return [[1]]
        if numRows == 2:
            return [[1],[1,1]]
        result = [[1],[1,1]]
        L = [1,1]
        next_L = [1]
        while(len(result) < numRows):
            for i in range(len(L)-1):
                element = L[i] + L[i+1]
                next_L.append(element)
            next_L.append(1)
            result.append(next_L)
            L = next_L
            next_L = [1]
        return result







# 参考解答：
class Solution(object):
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        result=[]
        for i in range(numRows):
            now = [1]*(i+1)
            if i>= 2:
                for n in range(1,i):
                    now[n] = pre[n-1]+pre[n]
            result+=[now]
            pre = now
        return result

















